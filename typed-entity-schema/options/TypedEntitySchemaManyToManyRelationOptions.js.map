{"version":3,"sources":["../../src/typed-entity-schema/options/TypedEntitySchemaManyToManyRelationOptions.ts"],"names":[],"mappings":"","file":"TypedEntitySchemaManyToManyRelationOptions.js","sourcesContent":["import {TypedEntitySchemaCommonRelationOptions} from \"./TypedEntitySchemaCommonRelationOptions\";\nimport {JoinTableOptions} from \"../..\";\nimport {JoinTableMultipleColumnsOptions} from \"../../decorator/options/JoinTableMultipleColumnsOptions\";\n\n/**\n * Options for many-to-many relation.\n */\nexport type TypedEntitySchemaManyToManyRelationOptions = TypedEntitySchemaCommonRelationOptions & ({\n\n    /**\n     * Relation type.\n     */\n    relation: \"many-to-many\"\n\n    /**\n     * Indicates if relation is a join column owning side.\n     * If set to true, current table will own a join column for this relation.\n     */\n    owner: true\n\n    /**\n     * Inverse side of the relationship.\n     * Must point to many-to-many relation property from related entity.\n     */\n    inverse: string\n\n    /**\n     * Join table options of this column.\n     * Used when you want to configure many-to-many's generated join table.\n     */\n    joinTableOptions?: JoinTableOptions | JoinTableMultipleColumnsOptions\n\n} | {\n\n    /**\n     * Relation type.\n     */\n    relation: \"many-to-many\"\n\n    /**\n     * Indicates if relation \"owns\" a join table.\n     * In many-to-many relation relation ownership doesn't matter a lot -\n     * you just need to set ownership from one of the side,\n     * it affects only generated table name.\n     */\n    owner: false\n\n    /**\n     * Inverse side of the relationship.\n     * Must point to many-to-many relation property from related entity.\n     */\n    inverse: string\n\n});\n"],"sourceRoot":"../.."}