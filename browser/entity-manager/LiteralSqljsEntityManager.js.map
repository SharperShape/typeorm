{"version":3,"sources":["../browser/src/entity-manager/LiteralSqljsEntityManager.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,0BAA0B,EAAE,MAAM,wBAAwB,CAAC;AAGpE;;;GAGG;AACH,MAAM,UAAU,+BAA+B,CAAC,EAAE,UAAU,EAAE,WAAW,EAGxE;IACG,MAAM,MAAM,GAAG,UAAU,CAAC,MAAqB,CAAC;IAEhD,uCACO,0BAA0B,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,KAC1D,MAAM,EAAE,oBAA2B,EAAE,mBAAmB;QACxD,KAAK,CAAC,YAAY,CAAC,4BAAiD;YAChE,MAAM,MAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACpD,CAAC;QACD,KAAK,CAAC,YAAY,CAAC,sBAA+B;YAC9C,MAAM,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC9C,CAAC;QACD,cAAc;YACV,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,IACH;AAEN,CAAC","file":"LiteralSqljsEntityManager.js","sourcesContent":["import { Connection } from \"../connection/Connection\";\nimport { SqljsDriver } from \"../driver/sqljs/SqljsDriver\";\nimport { QueryRunner } from \"../query-runner/QueryRunner\";\nimport { createLiteralEntityManager } from \"./LiteralEntityManager\";\nimport { SqljsEntityManager } from \"./SqljsEntityManager\";\n\n/**\n * A special EntityManager that includes import/export and load/save function\n * that are unique to Sql.js.\n */\nexport function createLiteralSqljsEntityManager({ connection, queryRunner }: {\n    connection: Connection,\n    queryRunner?: QueryRunner,\n}): SqljsEntityManager {\n    const driver = connection.driver as SqljsDriver;\n\n    return {\n        ...createLiteralEntityManager({ connection, queryRunner }),\n        typeof: \"SqljsEntityManager\" as any, // todo: fix as any\n        async loadDatabase(fileNameOrLocalStorageOrData: string | Uint8Array): Promise<void> {\n            await driver.load(fileNameOrLocalStorageOrData);\n        },\n        async saveDatabase(fileNameOrLocalStorage?: string): Promise<void> {\n            await driver.save(fileNameOrLocalStorage);\n        },\n        exportDatabase(): Uint8Array {\n            return driver.export();\n        }\n    };\n\n}\n"],"sourceRoot":".."}