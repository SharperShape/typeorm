{"version":3,"sources":["../browser/src/entity-manager/SqljsEntityManager.ts"],"names":[],"mappings":"","file":"SqljsEntityManager.js","sourcesContent":["import {EntityManager} from \"./EntityManager\";\n\n/**\n * A special EntityManager that includes import/export and load/save function\n * that are unique to Sql.js.\n */\nexport type SqljsEntityManager = EntityManager & {\n\n    /**\n     * Loads either the definition from a file (Node.js) or localstorage (browser)\n     * or uses the given definition to open a new database.\n     */\n    loadDatabase(fileNameOrLocalStorageOrData: string | Uint8Array): Promise<void>;\n\n    /**\n     * Saves the current database to a file (Node.js) or localstorage (browser)\n     * if fileNameOrLocalStorage is not set options.location is used.\n     */\n    saveDatabase(fileNameOrLocalStorage?: string): Promise<void>;\n\n    /**\n     * Returns the current database definition.\n     */\n    exportDatabase(): Uint8Array;\n\n };\n"],"sourceRoot":".."}